name: ros

on:
  pull_request:
    types: [synchronize, opened, reopened]

jobs:
  build-install-lint:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, ubuntu-18.04]

    steps:
      - run:
          echo ::set-env name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk
          -F / '{print $2}' | sed -e "s/:refs//")
        shell: bash

      - name: Create Catkin Workspace
        run: mkdir ~/catkin_ws/src -p

      - name: Checkout this repo
        uses: actions/checkout@v2
        with:
          path: ${{env.REPOSITORY_NAME}}

      - name: Link repos into catkin ws
        run: |
          ln -s "$GITHUB_WORKSPACE/$REPOSITORY_NAME" "$HOME/catkin_ws/src/"

      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-pip-pylint
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup Pylint
        run: |
          python -m pip install --upgrade pip
          echo "::add-path::/home/runner/.local/bin"
          python -m pip install "pylint<2.0.0"

      - name: Lint with pylint
        run: |
          source ~/catkin_ws/src/$REPOSITORY_NAME/bash_includes
          cd $GITHUB_WORKSPACE/$REPOSITORY_NAME
          git ls-files | grep 'py$' | xargs pylint --unsafe-load-any-extension=y --disable=fixme

      - name: Setup Catkin Lint
        run: |
          sudo add-apt-repository ppa:roehling/latest
          sudo apt-get update -y
          sudo apt-get install -y python-catkin-lint
      - name: Lint Catkin
        run: |
          cd $GITHUB_WORKSPACE/$REPOSITORY_NAME
          catkin_lint . -W2 --strict

  python-todos:
    runs-on: ubuntu-18.04
    steps:
      - run:
          echo ::set-env name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk
          -F / '{print $2}' | sed -e "s/:refs//")
        shell: bash

      - name: Checkout this repo
        uses: actions/checkout@v2
        with:
          path: $REPOSITORY_NAME

      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-pip-pylint
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup Pylint
        run: |
          python -m pip install --upgrade pip
          echo "::add-path::/home/runner/.local/bin"
          python -m pip install "pylint<2.0.0"

      - name: Find TODOs
        run: |
          cd $GITHUB_WORKSPACE/$REPOSITORY_NAME
          git ls-files | grep 'py$' | xargs pylint --disable=all --enable=fixme
